#!/usr/bin/guile
!#

;; (define maze (list
;;                (list
;;                  "|" "-" "-" "-" "-" "-" "-" "-" "-" "-" "-" "-"
;;                      "-" "-" "-" "-" "-" "-" "-" "-" "-" "-" "-" "|" "\n")
;;                (list
;;                  "|" " " " " " " " " " " " " " " " " " " " " "|"
;;                      "|" " " " " " " " " " " " " " " " " " " " " "|" "\n")
;;                (list
;;                  "|" " " "-" "-" "-" " " "-" "-" "-" "-" " " "|"
;;                      "|" " " "-" "-" "-" "-" " " "-" "-" "-" " " "|" "\n")
;;                (list
;;                  "|" " " "|" "|" "|" " " "|" "|" "|" "|" " " "|"
;;                      "|" " " "|" "|" "|" "|" " " "|" "|" "|" " " "|" "\n")
;;                (list
;;                  "|" " " "-" "-" "-" " " "-" "-" "-" "-" " " "-"
;;                      "-" " " "-" "-" "-" "-" " " "-" "-" "-" " " "|" "\n")
;;                (list
;;                  "|" " " " " " " " " " " " " " " " " " " " " " "
;;                      " " " " " " " " " " " " " " " " " " " " " " "|" "\n")
;;                (list
;;                  "|" " " "-" "-" "-" " " "-" "-" " " "-" "-" "-"
;;                      "-" "-" "-" " " "-" "-" " " "-" "-" "-" " " "|" "\n")
;;                (list
;;                  "|" " " " " " " " " " " "|" "|" " " " " " " "|"
;;                      "|" " " " " " " "|" "|" " " " " " " " " " " "|" "\n")
;;                (list
;;                  "-" "-" "-" "-" "-" " " "|" "|" "-" "-" " " "-"
;;                      "-" " " "-" "-" "|" "|" " " "-" "-" "-" "-" "-" "\n")
;;                (list
;;                  " " " " " " "|" "|" " " "|" "|" " " " " " " " "
;;                      " " " " " " " " "|" "|" " " "|" "|" " " " " " " "\n")
;;                (list
;;                  "-" "-" "-" "-" "-" " " "-" "-" " " "-" "-" " "
;;                      " " "-" "-" " " "-" "-" " " "-" "-" "-" "-" "-" "\n")
;;                (list
;;                  " " " " " " " " " " " " " " " " " " "|" " " " "
;;                      " " " " "|" " " " " " " " " " " " " " " " " " " "\n")
;;                (list
;;                  "-" "-" "-" "-" "-" " " "-" "-" " " "-" "-" "-"
;;                      "-" "-" "-" " " "-" "-" " " "-" "-" "-" "-" "-" "\n")
;;                (list
;;                  " " " " " " "|" "|" " " "|" "|" " " " " " " " "
;;                      " " " " " " " " "|" "|" " " "|" "|" " " " " " " "\n")
;;                (list
;;                  "-" "-" "-" "-" "-" " " "-" "-" " " "-" "-" "-"
;;                      "-" "-" "-" " " "-" "-" " " "-" "-" "-" "-" "-" "\n")
;;                (list
;;                  "|" " " " " " " " " " " " " " " " " " " " " "|"
;;                      "|" " " " " " " " " " " " " " " " " " " " " "|" "\n")
;;                (list
;;                  "|" " " "-" "-" "-" " " "-" "-" "-" "-" " " "-"
;;                      "-" " " "-" "-" "-" "-" " " "-" "-" "-" " " "|" "\n")
;;                (list
;;                  "|" " " " " "|" "|" " " " " " " " " " " " " " "
;;                      " " " " " " " " " " " " " " "|" "|" " " " " "|" "\n")
;;                (list
;;                  "|" "-" " " "-" "-" " " "-" "-" " " "-" "-" "-"
;;                      "-" "-" "-" " " "-" "-" " " "-" "-" " " "-" "|" "\n")
;;                (list
;;                  "|" " " " " " " " " " " "|" "|" " " " " " " "|"
;;                      "|" " " " " " " "|" "|" " " " " " " " " " " "|" "\n")
;;                (list
;;                  "|" " " "-" "-" "-" "-" "-" "-" "-" "-" " " "-"
;;                      "-" " " "-" "-" "-" "-" "-" "-" "-" "-" " " "|" "\n")
;;                (list
;;                  "|" " " " " " " " " " " " " " " " " " " " " " "
;;                      " " " " " " " " " " " " " " " " " " " " " " "|" "\n")
;;                (list
;;                  "|" "-" "-" "-" "-" "-" "-" "-" "-" "-" "-" "-"
;;                      "-" "-" "-" "-" "-" "-" "-" "-" "-" "-" "-" "|" "\n")))

(define maze (list
               (list
                 "X" "X" "X" "X" "X" "X" "X" "X" "X" "X" "X" "X"
                     "X" "X" "X" "X" "X" "X" "X" "X" "X" "X" "X" "X" "\n")
               (list
                 "X" " " " " " " " " " " " " " " " " " " " " "X"
                     "X" " " " " " " " " " " " " " " " " " " " " "X" "\n")
               (list
                 "X" " " "X" "X" "X" " " "X" "X" "X" "X" " " "X"
                     "X" " " "X" "X" "X" "X" " " "X" "X" "X" " " "X" "\n")
               (list
                 "X" " " "X" "X" "X" " " "X" "X" "X" "X" " " "X"
                     "X" " " "X" "X" "X" "X" " " "X" "X" "X" " " "X" "\n")
               (list
                 "X" " " "X" "X" "X" " " "X" "X" "X" "X" " " "X"
                     "X" " " "X" "X" "X" "X" " " "X" "X" "X" " " "X" "\n")
               (list
                 "X" " " " " " " " " " " " " " " " " " " " " " "
                     " " " " " " " " " " " " " " " " " " " " " " "X" "\n")
               (list
                 "X" " " "X" "X" "X" " " "X" "X" " " "X" "X" "X"
                     "X" "X" "X" " " "X" "X" " " "X" "X" "X" " " "X" "\n")
               (list
                 "X" " " " " " " " " " " "X" "X" " " " " " " "X"
                     "X" " " " " " " "X" "X" " " " " " " " " " " "X" "\n")
               (list
                 "X" "X" "X" "X" "X" " " "X" "X" "X" "X" " " "X"
                     "X" " " "X" "X" "X" "X" " " "X" "X" "X" "X" "X" "\n")
               (list
                 " " " " " " "X" "X" " " "X" "X" " " " " " " " "
                     " " " " " " " " "X" "X" " " "X" "X" " " " " " " "\n")
               (list
                 "X" "X" "X" "X" "X" " " "X" "X" " " "X" "X" " "
                     " " "X" "X" " " "X" "X" " " "X" "X" "X" "X" "X" "\n")
               (list
                 " " " " " " " " " " " " " " " " " " "X" " " " "
                     " " " " "X" " " " " " " " " " " " " " " " " " " "\n")
               (list
                 "X" "X" "X" "X" "X" " " "X" "X" " " "X" "X" "X"
                     "X" "X" "X" " " "X" "X" " " "X" "X" "X" "X" "X" "\n")
               (list
                 " " " " " " "X" "X" " " "X" "X" " " " " " " " "
                     " " " " " " " " "X" "X" " " "X" "X" " " " " " " "\n")
               (list
                 "X" "X" "X" "X" "X" " " "X" "X" " " "X" "X" "X"
                     "X" "X" "X" " " "X" "X" " " "X" "X" "X" "X" "X" "\n")
               (list
                 "X" " " " " " " " " " " " " " " " " " " " " "X"
                     "X" " " " " " " " " " " " " " " " " " " " " "X" "\n")
               (list
                 "X" " " "X" "X" "X" " " "X" "X" "X" "X" " " "X"
                     "X" " " "X" "X" "X" "X" " " "X" "X" "X" " " "X" "\n")
               (list
                 "X" " " " " "X" "X" " " " " " " " " " " " " " "
                     " " " " " " " " " " " " " " "X" "X" " " " " "X" "\n")
               (list
                 "X" "X" " " "X" "X" " " "X" "X" " " "X" "X" "X"
                     "X" "X" "X" " " "X" "X" " " "X" "X" " " "X" "X" "\n")
               (list
                 "X" " " " " " " " " " " "X" "X" " " " " " " "X"
                     "X" " " " " " " "X" "X" " " " " " " " " " " "X" "\n")
               (list
                 "X" " " "X" "X" "X" "X" "X" "X" "X" "X" " " "X"
                     "X" " " "X" "X" "X" "X" "X" "X" "X" "X" " " "X" "\n")
               (list
                 "X" " " " " " " " " " " " " " " " " " " " " " "
                     " " " " " " " " " " " " " " " " " " " " " " "X" "\n")
               (list
                 "X" "X" "X" "X" "X" "X" "X" "X" "X" "X" "X" "X"
                     "X" "X" "X" "X" "X" "X" "X" "X" "X" "X" "X" "X" "\n")))
