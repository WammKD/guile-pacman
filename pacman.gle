#!/usr/bin/guile
!#
(use-modules (jaft functs) (ncurses curses))
(include "./mazes.gle")

(define stdscr (initscr))
(noecho!)
(keypad! stdscr #t)
(cbreak!)
(typeahead! -1)
;; (halfdelay! 2)
(nodelay! stdscr #t)

(define (refresh-maze-to-screen grid screen)
  (erase screen)
  (for-each (lambda (m)
              (for-each (lambda (ma)
                          (addstr screen ma)) m)) grid)
  (refresh screen))

(define (change-coord grid x y replacement)
  (define tmp (!! grid y)) 
  (lst
    (: grid 0 y)
    (list (lst
            (: tmp 0 x)
            replacement
            (: tmp (++ x))))
    (: grid (++ y))))

(define (new-pacman)
  #("<" KEY_RIGHT))

(define (pacman-next-sprite pacman)
  (define moves #("^" "V" ">" "<"))
  (if (== (!! pacman 0) "*")
      (!! moves (- (!! pacman 1) 258))
    "*"))

(refresh-maze-to-screen (change-coord maze 1 1 "*") stdscr)
(flushinp)
(usleep 500000)
(if (== (getch stdscr) KEY_RIGHT)
    (refresh-maze-to-screen (change-coord maze 2 1 "<") stdscr))
(flushinp)
(usleep 500000)
(if (== (getch stdscr) KEY_RIGHT)
    (refresh-maze-to-screen (change-coord maze 3 1 "*") stdscr))
(flushinp)
(usleep 500000)
(if (== (getch stdscr) KEY_RIGHT)
    (refresh-maze-to-screen (change-coord maze 4 1 "<") stdscr))
(flushinp)
(usleep 500000)
(if (== (getch stdscr) KEY_RIGHT)
    (refresh-maze-to-screen (change-coord maze 5 1 "*") stdscr))
(flushinp)
(usleep 500000)
(if (== (getch stdscr) KEY_RIGHT)
    (refresh-maze-to-screen (change-coord maze 6 1 "<") stdscr))
(flushinp)
(usleep 500000)
(if (== (getch stdscr) KEY_RIGHT)
    (refresh-maze-to-screen (change-coord maze 7 1 "*") stdscr))
(flushinp)
(usleep 500000)
(if (== (getch stdscr) KEY_RIGHT)
    (refresh-maze-to-screen (change-coord maze 8 1 "<") stdscr))
(usleep 500000)
(endwin)
  
